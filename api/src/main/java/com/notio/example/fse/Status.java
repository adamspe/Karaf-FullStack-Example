package com.notio.example.fse;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

import org.codehaus.jackson.annotate.JsonCreator;
import org.codehaus.jackson.annotate.JsonValue;

/**
 * This source was originally generated by xjc and then hijacked so that
 * jackson annotations could be added so that enumerations are properly
 * serialized/deserialized to/from json.
 * 
 * The only change from the originally generated source is the addition of the
 * JsonValue and JsonCreator annotations to the value and fromValue methods
 * respectively.
 */
@XmlType(name = "Status")
@XmlEnum
public enum Status {

    @XmlEnumValue("Draft")
    DRAFT("Draft"),
    @XmlEnumValue("Under Review")
    UNDER_REVIEW("Under Review"),
    @XmlEnumValue("Released")
    RELEASED("Released");
    private final String value;

    Status(String v) {
        value = v;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static Status fromValue(String v) {
        for (Status c: Status.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
